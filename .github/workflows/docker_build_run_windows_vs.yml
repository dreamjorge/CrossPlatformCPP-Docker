name: Docker Build and Run on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-run-windows-docker:
    name: Build and Run Docker (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        config: [Debug, Release]
        vs_year: [2019, 2022]
    env:
      CMAKE_VERSION: 3.21.3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set VS_VERSION
        run: |
          if ("${{ matrix.vs_year }}" -eq "2019") {
            echo "VS_VERSION=16" >> $env:GITHUB_ENV
          } elseif ("${{ matrix.vs_year }}" -eq "2022") {
            echo "VS_VERSION=17" >> $env:GITHUB_ENV
          }

      - name: Debug VS_VERSION
        run: echo "VS_VERSION=${{ env.VS_VERSION }}"

      - name: Build Docker Image
        run: |
          echo "Building Docker image for VS_YEAR=${{ matrix.vs_year }} and VS_VERSION=${{ env.VS_VERSION }}"
          docker build --no-cache \
            --build-arg VS_YEAR=${{ matrix.vs_year }} \
            --build-arg VS_VERSION=${{ env.VS_VERSION }} \
            --build-arg CMAKE_VERSION=${{ env.CMAKE_VERSION }} \
            -t crossplatformapp-windows-vs${{ matrix.vs_year }} .
        shell: bash

      - name: Run Build Script Inside Docker
        run: |
          docker run --rm \
            -e CONFIG=${{ matrix.config }} \
            -e VS_YEAR=${{ matrix.vs_year }} \
            -v "${{ github.workspace }}:C:\app" \
            crossplatformapp-windows-vs${{ matrix.vs_year }} cmd.exe /c dir C:\app