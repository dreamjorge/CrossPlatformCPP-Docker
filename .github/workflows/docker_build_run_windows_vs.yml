# ==============================================================
# GitHub Actions Workflow: Docker Build and Run on Windows
# ==============================================================

name: Docker Build and Run on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Global environment variables
  CMAKE_VERSION: 3.21.3  # CMake version used in Docker build
  DOCKERFILE_PATH: Dockerfile.windows.vs  # Path to the Dockerfile
  DOCKER_IMAGE_PREFIX: crossplatformapp  # Docker image prefix
  MOUNT_PATH: C:\app  # Container mount path for the repository
  BUILD_SCRIPT: C:\app\scripts\windows\build.cmd  # Path to the build script in the container
  RUN_SCRIPT: C:\app\scripts\windows\run.cmd  # Path to the run script in the container

jobs:
  build-and-run-windows-docker:
    name: Build and Run Docker (Windows)
    runs-on: windows-latest

    strategy:
      matrix:
        vs_version:
          - { version: "15", tag: "vs2017" }
          - { version: "16", tag: "vs2019" }
          - { version: "17", tag: "vs2022" }

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Define Docker image tag dynamically
      - name: Define Docker Image Tag
        id: set_tag
        run: |
          echo "DOCKER_IMAGE_TAG=${{ env.DOCKER_IMAGE_PREFIX }}-${{ matrix.vs_version.tag }}-${{ github.run_number }}" >> $GITHUB_ENV

      # Step 3: Log configuration for debugging
      - name: Log Build Configuration
        shell: pwsh
        run: |
          echo "Visual Studio Version: ${{ matrix.vs_version.version }} (${{ matrix.vs_version.tag }})"
          echo "CMake Version: ${{ env.CMAKE_VERSION }}"
          echo "Using Dockerfile: ${{ env.DOCKERFILE_PATH }}"
          echo "Docker Image Tag: ${{ env.DOCKER_IMAGE_TAG }}"
          echo "Build Script: ${{ env.BUILD_SCRIPT }}"
          echo "Run Script: ${{ env.RUN_SCRIPT }}"
          echo "Mount Path: ${{ env.MOUNT_PATH }}"

      # Step 4: Build Docker Image
      - name: Build Docker Image
        shell: pwsh
        run: |
          docker build --no-cache `
            --build-arg VS_VERSION=${{ matrix.vs_version.version }} `
            --build-arg CM
