# ==============================================================
# GitHub Actions Workflow: Docker Build and Run on Windows
# ==============================================================

name: Docker Build and Run on Windows

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CMAKE_VERSION: 3.21.3
  DOCKERFILE_PATH: Dockerfile.windows.vs
  DOCKER_IMAGE_PREFIX: crossplatformapp
  MOUNT_PATH: C:\app
  BUILD_SCRIPT: C:\app\scripts\windows\build.cmd
  RUN_SCRIPT: C:\app\scripts\windows\run.cmd

jobs:
  build-and-run-windows-docker:
    runs-on: windows-latest

    strategy:
      matrix:
        vs_version: 
          - { version: "15", tag: "vs2017" }
          - { version: "16", tag: "vs2019" }
          - { version: "17", tag: "vs2022" }
        config: [Debug, Release]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Define Docker Image Tag
        run: |
          echo "DOCKER_IMAGE_TAG=${{ env.DOCKER_IMAGE_PREFIX }}-${{ matrix.vs_version.tag }}" >> $GITHUB_ENV
          echo "Docker Image Tag set to: ${{ env.DOCKER_IMAGE_PREFIX }}-${{ matrix.vs_version.tag }}"

      - name: Log Build Configuration
        shell: pwsh
        run: |
          echo "Visual Studio Version: ${{ matrix.vs_version.version }} (${{ matrix.vs_version.tag }})"
          echo "Build Configuration: ${{ matrix.config }}"
          echo "CMake Version: ${{ env.CMAKE_VERSION }}"
          echo "Using Dockerfile: ${{ env.DOCKERFILE_PATH }}"
          echo "Docker Image Tag: ${{ env.DOCKER_IMAGE_TAG }}"
          echo "Build Script: ${{ env.BUILD_SCRIPT }}"
          echo "Run Script: ${{ env.RUN_SCRIPT }}"
          echo "Mount Path: ${{ env.MOUNT_PATH }}"

      - name: Build Docker Image
        shell: pwsh
        run: |
          docker build --no-cache `
            --build-arg VS_VERSION=${{ matrix.vs_version.version }} `
            --build-arg CMAKE_VERSION=${{ env.CMAKE_VERSION }} `
            -t ${{ env.DOCKER_IMAGE_TAG }} `
            -f ${{ env.DOCKERFILE_PATH }} .

      - name: Run Build Script Inside Docker
        shell: pwsh
        run: |
          docker run --rm `
            -v "${{ github.workspace }}:${{ env.MOUNT_PATH }}" `
            ${{ env.DOCKER_IMAGE_TAG }} `
            cmd.exe /c "${{ env.BUILD_SCRIPT }} ${{ matrix.vs_version.version }} ${{ matrix.config }}"

      - name: Run Application Inside Docker
        shell: pwsh
        run: |
          docker run --rm `
            -v "${{ github.workspace }}:${{ env.MOUNT_PATH }}" `
            ${{ env.DOCKER_IMAGE_TAG }} `
            cmd.exe /c "${{ env.RUN_SCRIPT }}"
