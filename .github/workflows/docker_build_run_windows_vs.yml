name: Docker Build and Run on Windows Runner

# Trigger the workflow on push and pull request events to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-run-windows-docker:
    name: Build and Run Docker (Windows)
    runs-on: windows-latest

    # Define a matrix to run the job with different configurations
    strategy:
      matrix:
        config: [Release]
    env:
      CMAKE_VERSION: 3.21.3
      # Define a base name for Docker images to maintain consistency
      DOCKER_NAME_BASE: crossplatformapp-windows

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      # Step 2: Build the Docker image
      - name: Build Docker Image
        shell: pwsh
        run: |
          # Build the Docker image with the necessary build arguments
          docker build --no-cache `
            --build-arg VS_VERSION=16 `
            --build-arg CMAKE_VERSION=${{ env.CMAKE_VERSION }} `
            -t $env:DOCKER_NAME_BASE `
            -f Dockerfile.windows.vs .

      # Optional Step: List Docker Images for Verification (Useful for Debugging)
      - name: List Docker Images
        shell: pwsh
        run: |
          docker images

      # Step 3: Execute the build script inside the Docker container
      - name: Run Build Script Inside Docker
        shell: pwsh
        run: |
          # Define the build configuration
          $config = "${{ matrix.config }}"

          # Run the build PowerShell script inside the container
          docker run --rm `
            -e CONFIG=$config `
            -e VS_VERSION=16 `
            -v "${{ github.workspace }}:C:/app" `
            $env:DOCKER_NAME_BASE `
            powershell -NoProfile -ExecutionPolicy Bypass -Command `
              "Set-Location C:/app; ./build.ps1 -CONFIG $config -VS_VERSION 16"

      # Step 4: Execute the run script inside the Docker container
      - name: Run Application Inside Docker
        shell: pwsh
        run: |
          # Define the build configuration
          $config = "${{ matrix.config }}"

          # Run the application PowerShell script inside the container
          docker run --rm `
            -e CONFIG=$config `
            -v "${{ github.workspace }}:C:/app" `
            $env:DOCKER_NAME_BASE `
            powershell -NoProfile -ExecutionPolicy Bypass -Command `
              "Set-Location C:/app; ./run.ps1 -CONFIG $config"