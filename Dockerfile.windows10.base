# Dockerfile.windows10.base
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019 AS crossplatformapp-windows-base

LABEL maintainer="jorge-kun@live.com" \
      description="Base Docker image for building and running CrossPlatformApp" \
      version="1.0.0" \
      repository="https://github.com/dreamjorge/CrossPlatformCPP-Docker" \
      documentation="https://github.com/dreamjorge/CrossPlatformCPP-Docker#readme" \
      issues="https://github.com/dreamjorge/CrossPlatformCPP-Docker/issues" \
      license="MIT"

SHELL ["cmd", "/S", "/C"]

ENV BUILD_TOOLS_PATH=C:\BuildTools
ENV TEMP_DIR=C:\TEMP

RUN mkdir %TEMP_DIR%

# Step 7/9: Bypass SSL/TLS validation and import root certificates
RUN powershell -Command " \
    # Bypass SSL certificate validation (Not recommended for production environments) \
    [Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }; \
    # Set TLS 1.2 as the security protocol \
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; \
    # Define the URL and destination path for cacert.pem \
    $certUrl = 'https://curl.se/ca/cacert.pem'; \
    $certPath = 'C:\\TEMP\\cacert.pem'; \
    # Download cacert.pem using Invoke-WebRequest \
    Invoke-WebRequest -Uri $certUrl -OutFile $certPath; \
    # Create a new certificate object and import cacert.pem \
    $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2; \
    $cert.Import($certPath); \
    # Import the certificate into the Trusted Root Certification Authorities store \
    Import-Certificate -FilePath $certPath -CertStoreLocation Cert:\LocalMachine\Root; \
    # Remove the downloaded cacert.pem file \
    Remove-Item -Path $certPath -Force"

# Step 8/9: Copy the Chocolatey installation script
COPY scripts/windows/install_choco.ps1 C:\scripts\install_choco.ps1

# Step 9/9: Run the Chocolatey installation script
RUN powershell -NoProfile -ExecutionPolicy Bypass -File "C:\\scripts\\install_choco.ps1"