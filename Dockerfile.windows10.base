# escape=`

FROM mcr.microsoft.com/windows/servercore:ltsc2019 AS base

# Build Arguments
ARG VS_YEAR=2019
ARG VS_VERSION=16
ARG CMAKE_VERSION=3.21.3

# Set environment variables for proxy and no_proxy
ENV http_proxy="http://sia-proxy.geo.conti.de:3128" `
    https_proxy="http://sia-proxy.geo.conti.de:3128" `
    no_proxy="localhost,127.0.0.1,.conti.de"

# Copy Corporate Root Certificate
COPY CorporateITSecurity.crt /certs/CorporateITSecurity.crt

# Add corporate root certificate
RUN powershell -NoProfile -Command `
    certutil -addstore -f "Root" C:/certs/CorporateITSecurity.crt

# Copy Visual Studio Build Tools Installation Script
COPY scripts/windows/install_vs_buildtools.ps1 /scripts/install_vs_buildtools.ps1

# Install Visual Studio Build Tools in silent mode
RUN powershell -NoProfile -ExecutionPolicy Bypass -File /scripts/install_vs_buildtools.ps1 -VsVersion 16

# Refresh PATH to include Visual Studio tools if needed
RUN powershell -NoProfile -Command `
    [System.Environment]::SetEnvironmentVariable("PATH", $env:PATH + ";C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer", [System.EnvironmentVariableTarget]::Machine)

# Install Chocolatey
RUN powershell -NoProfile -Command `
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
    Invoke-WebRequest -Uri 'https://chocolatey.org/install.ps1' -OutFile /scripts/install_choco.ps1 -UseBasicParsing; `
    powershell -NoProfile -ExecutionPolicy Bypass -File /scripts/install_choco.ps1

# Install CMake using Chocolatey
RUN choco install cmake --version=${CMAKE_VERSION} -y

# Verify Installations
RUN powershell -NoProfile -ExecutionPolicy Bypass -Command `
    Write-Host 'INFO: Verifying Visual Studio Build Tools installation...'; `
    & "C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe" -all; `
    Write-Host 'INFO: Verifying CMake installation...'; `
    cmake --version

# Set Working Directory
WORKDIR C:/app

# Default Command
CMD ["cmd.exe"]