# Use Windows Server Core LTSC 2022 as the base image
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Install Chocolatey
RUN powershell -Command " \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));"

# Install Visual Studio 2022 Build Tools and CMake using Chocolatey
RUN choco install visualstudio2022buildtools --yes --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --includeRecommended --quiet" && \
    choco install cmake --version 3.26.4 --yes

# Update PATH environment variable to include CMake and MSVC compiler paths
ENV PATH="C:/ProgramData/chocolatey/bin;C:/Program Files/CMake/bin;C:/BuildTools/VC/Tools/MSVC/14.41.34120/bin/Hostx64/x64;C:/BuildTools/MSBuild/Current/Bin;C:/Windows/System32;C:/Windows;C:/Program Files/Common Files;$PATH"

# Set the working directory to /build
WORKDIR C:/build

# Copy the entire C++ project into /build
COPY . ./

# Initialize Visual Studio environment and build the project in a single RUN command
RUN powershell -Command "& { \
    & 'C:/BuildTools/VC/Auxiliary/Build/vcvarsall.bat' x64; \
    cmake -S . -B build -G 'Visual Studio 17 2022' -A x64; \
    cmake --build build --config Release; \
}"

# Set the default command to run the built executable
CMD ["C:\\build\\build\\Release\\CrossPlatformApp.exe"]
