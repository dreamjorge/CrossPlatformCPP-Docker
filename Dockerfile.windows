# Use Windows Server Core LTSC 2022 as the base image
FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Install Chocolatey
RUN powershell -Command " \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'));"

# Install Visual Studio 2022 Build Tools with essential components only
RUN powershell -Command " \
    choco install visualstudio2022buildtools --yes --no-progress --ignore-checksums --package-parameters '--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --quiet'; \
    choco install cmake --version 3.26.4 --yes --no-progress --ignore-checksums; \
    Remove-Item -Recurse -Force C:/ProgramData/chocolatey/cache/*"

# Ensure the build directory exists
RUN powershell -Command "New-Item -ItemType Directory -Path C:/build -Force"

# Verify that vcvarsall.bat exists at the expected location
RUN powershell -Command " \
    if (Test-Path 'C:/BuildTools/VC/Auxiliary/Build/vcvarsall.bat') { \
        Write-Output 'vcvarsall.bat found at: C:/BuildTools/VC/Auxiliary/Build/vcvarsall.bat' \
    } else { \
        throw 'vcvarsall.bat not found at C:/BuildTools/VC/Auxiliary/Build/vcvarsall.bat' \
    }"

# Set the working directory to /build
WORKDIR C:/build

# Copy the entire C++ project into /build
COPY . ./

# Initialize Visual Studio environment and build the project
RUN powershell -Command " \
    & 'C:/BuildTools/VC/Auxiliary/Build/vcvarsall.bat' x64; \
    cmake -S . -B build -G 'Visual Studio 17 2022' -A x64; \
    cmake --build build --config Release"

# Set the default command to run the built executable
CMD ["C:\\build\\build\\Release\\CrossPlatformApp.exe"]
