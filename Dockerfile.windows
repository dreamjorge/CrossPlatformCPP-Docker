# Use Windows Server Core as the base image
FROM mcr.microsoft.com/windows/servercore:ltsc2019

# Set shell to PowerShell with proper error handling and line continuation character
SHELL ["powershell", "-NoProfile", "-Command", "$ErrorActionPreference = 'Stop';"]

# Add Build Tools to PATH
ENV PATH="C:\\Windows\\System32;C:\\BuildTools\\VC\\Tools\\MSVC\\14.33.31629\\bin\\Hostx64\\x64;C:\\BuildTools\\Common7\\IDE;C:\\BuildTools\\MSBuild\\Current\\Bin;${PATH}"

# Force the use of TLS 1.2 for secure connections
RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

# Download Visual Studio Build Tools
RUN Write-Host "Downloading Visual Studio Build Tools..."; `
    Invoke-WebRequest -Uri "https://aka.ms/vs/17/release/vs_buildtools.exe" -OutFile "vs_buildtools.exe"; `
    if (!(Test-Path -Path "vs_buildtools.exe")) { `
        Write-Host "Failed to download Visual Studio Build Tools. Exiting..."; `
        exit 1; `
    } else { `
        Write-Host "Download successful."; `
    }

# Install Visual Studio Build Tools
RUN Write-Host "Installing Visual Studio Build Tools..."; `
    Start-Process -FilePath ".\\vs_buildtools.exe" -ArgumentList '--quiet', '--wait', '--norestart', '--nocache', '--installPath', 'C:\\BuildTools', `
    '--add', 'Microsoft.VisualStudio.Workload.VCTools', '--add', 'Microsoft.VisualStudio.Component.VC.CMake.Project' -NoNewWindow -Wait; `
    Remove-Item -Force "vs_buildtools.exe"

# Download and extract CMake
RUN Write-Host "Downloading CMake..."; `
    Invoke-WebRequest -Uri "https://github.com/Kitware/CMake/releases/download/v3.26.4/cmake-3.26.4-windows-x86_64.zip" -OutFile "cmake.zip"; `
    Expand-Archive -Path "cmake.zip" -DestinationPath "C:\\"; `
    Remove-Item -Force "cmake.zip"

# Add the extracted CMake path to PATH
ENV PATH="C:\\cmake-3.26.4-windows-x86_64\\bin;${PATH}"

# Check if CMake is available
RUN cmake --version

# Specify a working directory for the build
WORKDIR C:\\build

# Copy your entire C++ project into the container
COPY . C:\\build

# Run CMake to configure and build your project
RUN cmake -S . -B build -G "Visual Studio 17 2022"; `
    cmake --build build --config Release

# Set the default command to run your built executable
CMD ["C:\\build\\build\\Release\\CrossPlatformApp.exe"]
