# escape=`

# ===================================================================
# Base Image
# ===================================================================
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2022

# ===================================================================
# Metadata
# ===================================================================
LABEL maintainer="jorge-kun@live.com" `
      description="Docker image for building and running CrossPlatformApp" `
      version="1.0" `
      org.opencontainers.image.source="https://github.com/dreamjorge/CrossPlatformCPP-Docker"

# ===================================================================
# Build Arguments
# ===================================================================
ARG CHANNEL_URL=https://aka.ms/vs/17/release/channel
ARG VS_BUILD_TOOLS_URL=https://aka.ms/vs/17/release/vs_buildtools.exe
ARG VS_BUILD_TOOLS_VERSION=17.12.0
ARG CMAKE_VERSION=3.21.3

# ===================================================================
# Environment Variables
# ===================================================================
ENV BUILD_TOOLS_PATH=C:\BuildTools `
    BUILD_DIR=C:\app `
    ChocolateyUseWindowsCompression=false `
    ChocolateyInstall=C:\ProgramData\chocolatey

# ===================================================================
# Append to PATH Environment Variable Correctly
# ===================================================================
ENV PATH=C:\\Program Files\\CMake\\bin;%ChocolateyInstall%\\bin;%PATH%

# ===================================================================
# Set Shell to cmd
# ===================================================================
SHELL ["cmd", "/S", "/C"]

# ===================================================================
# Create Temporary Directory for Downloads
# ===================================================================
RUN mkdir C:\TEMP

# ===================================================================
# Install Chocolatey Package Manager, CMake, and Clean Up
# ===================================================================
RUN powershell -NoProfile -ExecutionPolicy Bypass -Command " `
        # Set TLS 1.2 for secure downloads
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
        # Download and install Chocolatey
        Set-ExecutionPolicy Bypass -Scope Process -Force; `
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))" && `
    refreshenv && `
    choco feature enable -n allowGlobalConfirmation && `
    choco install cmake --version=%CMAKE_VERSION% --installargs 'ADD_CMAKE_TO_PATH=System' -y && `
    choco clean --yes

# ===================================================================
# Download Visual Studio Channel and Installer
# ===================================================================
RUN powershell -Command " `
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
        Invoke-WebRequest -Uri %CHANNEL_URL% -OutFile C:\TEMP\VisualStudio.chman" && `
    powershell -Command " `
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
        Invoke-WebRequest -Uri %VS_BUILD_TOOLS_URL% -OutFile C:\TEMP\vs_buildtools.exe"

# ===================================================================
# Install Visual Studio Build Tools with C++ Workload
# ===================================================================
RUN C:\TEMP\vs_buildtools.exe --quiet --wait --norestart --nocache `
        --channelUri C:\TEMP\VisualStudio.chman `
        --installChannelUri C:\TEMP\VisualStudio.chman `
        --add Microsoft.VisualStudio.Workload.VCTools --includeRecommended `
        --installPath %BUILD_TOOLS_PATH% && `
    del /F /Q C:\TEMP\vs_buildtools.exe && `
    del /F /Q C:\TEMP\VisualStudio.chman

# ===================================================================
# Clean Up Temporary Files
# ===================================================================
RUN rmdir /S /Q C:\TEMP

# ===================================================================
# Verify Installations
# ===================================================================
RUN echo PATH="%PATH%" && `
    where cmake && `
    cmake --version && `
    where cl && `
    cl.exe

# ===================================================================
# Set Working Directory
# ===================================================================
WORKDIR %BUILD_DIR%

# ===================================================================
# Copy Scripts Directory
# ===================================================================
COPY scripts/windows C:\scripts\windows

# ===================================================================
# Verify BUILD_DIR Environment Variable
# ===================================================================
RUN echo BUILD_DIR=%BUILD_DIR%

# ===================================================================
# Default Command
# ===================================================================
CMD ["cmd.exe"]
